 Node* merge(Node *h1,Node *h2)
    {
        Node *d=new Node(-1);
        Node *t=d;
        Node *curr1=h1,*curr2=h2;
        while(curr1||curr2)
        {
            if(curr1!=NULL&&curr2!=NULL)
            {
                if(curr1->data<curr2->data)
                {
                    t->bottom=curr1;
                    t=t->bottom;
                    curr1=curr1->bottom;
                    
                }
                else
                {
                    t->bottom=curr2;
                    t=t->bottom;
                    curr2=curr2->bottom; 
                }
            }
            
            if(curr1!=NULL&&curr2==NULL)
            {
                t->bottom=curr1;
                    t=t->bottom;
                    curr1=curr1->bottom; 
            }
            if(curr1==NULL&&curr2!=NULL)
            {
                t->bottom=curr2;
                    t=t->bottom;
                    curr2=curr2->bottom;
            }
        }
        return d->bottom;
        
    }
Node *flatten(Node *root)
{
  
  
  if(root==NULL)return NULL;
  //call recursively
  
  return merge(root,flatten(root->next));
}


https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1#
